a[href^="htttp:123"] {
    background-color: aqua;
}
/*стилизует ссылки по названию с начала*/
a[href$=".jpg"] {
background-color: white;
}
/*стилизует ссылку по названию с конца*/
div p span {

}
/*вложенность селекторов*/

ul li > span {
    font-weight: bold;
}
/*селектор прямого потомка*/
ul li + li {

}
/*!*следующий потомок  или ближайший селектор*! все последующие после первого в списке*/
br ~ p {
    font-size: 30px;
}
/*стилизация после указанного*/
a[target] {

}
/*стилизация по аттрибутам*/
a[target="blznk"] {

}
/*стилизация по аттрибутам*/
a[href*="link"] {
    background: crimson;

}
/*строка проверяется на наличие указанных символов*/
/*Самые распространенные селекторы класса групповой и селектор потомка*/
/*Псевдоэлементы и псевдоклассы*/
a {
    color: black;
    text-decoration: none;
}
a:hover {

}
/*по наведению*/
a:visited {

}
/*посещенная ссылка*/
a:active {

}
/*применяется в момент кратковременного щелчка на ссылку применяется для любых активных элементов*/
a:focus {

}
/*добавляется на элемент при перемещении с помощью TAB*/
p::first-letter {

}
/*стилизация первой буквы*/
p::first-line {

}
/*стилизация первой строки*/
p::selection {

}
/*стилизация выделения текста*/
h1::before {
    content: "this is";
}
h1::after {
    content: "channel"; //специальное свойство
}
/*часто применяются - они отдельные созданные черех css*/
.list li:first-child {

}
.list li:last-child {

}

.list li:nth-child(even) {


}
/*покраска четное элемента в списке или таблице*/
/*можно передавать цифры для конкретных строк*/
/*2n - применение к каждому второму элементу +1 отсчет начинается от указанного через +*/
.list li:nth-child(odd) {


}
/*покраска нечетное элемента в списке или таблице*/
.list span:first-of-type {

}
.list span:last-of-type {

}
.list span:nth-of-type(2) {

}
/*окраска элементов и их выбор начало конец и по номеру*/
.list4 li:not(.item) {

}
/*добавь ко всем элементам кроме класса .item*/
/*                   element psevdoelement = 1center */
/*                         class attribute = 10*/
/*                                      id = 100*/
/*                            inline style = 1,000*/
/*Каскадность и наследование*/
/*!important в обязательном порядке применяет это свойство - на практике лучше не применять*/
/*Важность - !important*/
/*Специфичность вес элементов*/
/*порядок в самих стилях сверху вниз*/
/*есть свойство которые наследуются или нет*/
/*наследуются такие как внешний вид текста*/
/*рамки границы позиционирование*/

/*inherit - наследует свойство от родителя*/
/*Reset && Normalize - копируются и подключаются к проекту*/
/*                     Блочная модель и отступы*/
/*                     строчные - подстраивается под свой размер*/
/*                     блочные - занимают весь размер экрана*/
/*                     строчно-блочные*/
/*                    display: inline; делает блочный элемент строчным*/
/*                                     margin отступы снаружи*/
/*                                     padding внутри*/
/*                                     зеленым - padding*/
/*оранжевым -*/
/*синим - контент*/
/*желтым = border*/
/*красным - margin*/


/*для строчных элементов margin top && bottom не применяются*/
/*                                     с блочным элементом проблем нет*/
/*                                     схлопывание margin collapce*/
/*                                     если элементы находятся рядом то margi между ними равен большему margin*/
/*                                     для строчных  элементов задание высоты и ширины не применимо*/

/*                                     box-sizing border-box*/
@font-face {
    font-family: 'Roboto';
    src: url(".ttf") format ("truetype")
url(".woff") format ("woff")
url(".woff2") format ("woff2")
url(".otf") format ("opentype")
    font-weight: 500;
    font-style: normal;
}
body {
    font-font: "Roboto", Arial, Helvetica, sans-serif;
}