// Добрый день!
//
//     Спасибо за отклик на вакансию Web-программист.
//
//     Выполните, пожалуйста, тестовое задание и пришлите решение.
//
//
//     Задание 1.
// Иван Иванович работает пилотом. Ровно в полдень 1 января 2020 года он вылетел из Москвы и с тех пор
// всю жизнь живет по одному и тому же графику: он за 2 часа совершает полет на запад на 3 часовых пояса.
//     Затем 6 часов отдыхает и снова летит на запад на 3 часовых пояса (в этот раз тоже за 2 часа).
// Иван Иванович никогда не спит, потому что он отличный пилот. Напишите программу, которая принимает
// в качестве параметра командной строки номер года и пишет сколько в Москве будет времени, когда Иван Иванович
// отпразднует наступление того года, который был передан в качестве параметра. Если новый год застает Ивана Ивановича
// в полете — он празднует его сразу после приземления, потому что он отличный пилот.
//
//     Задание 2.
// Иван Иванович, когда не летает на самолете, инвестирует деньги в биржу. Он решил разобраться с тем,
//     насколько это рискованно, потому что он не только отличный пилот, но замечательный инвестор.
//     Он задался вопросом "Если бы я купил актив SPY, 1 января 2000 года и продал бы его ровно через год — " +
// "я бы заработал или проиграл? А если 2 января 2000? А третьего? Если анализировать таким образом каждый " +
// "день с 1 января 2000 до 31 декабря 2020 года включительно — сколько процентов таких экспериментов были " +
// "бы прибыльными".
//
//     Напишите программу, которая на вход, в виде  параметра командной строчки, получает тикер какого-то актива
// (его краткое обозначение, например: BND, SPY, BIL). И в результате выводит на экран число процентов успешных дней.
//     При расчете нужно учитывать только биржевые цены, без указания дивидендов. Для анализа используйте цены,
//     закрытия торгов (close). Информацию о стоимости рыночных активов можно брать с сайта finance.yahoo.com
// (Например: https://query1.finance.yahoo.com/v7/finance/download/SPY?period1=728265600&period2=1643673600&interval=1d&events=history&includeAdjustedClose=true)
//
//     Задание 3.
// Иван Иванович, не только отличный пилот и замечательный инвестор, но и просто любознательный человек. Он заметил,
//     что из букв слова "самолет", можно составить слова "тело", "лом", "мот", "том" и так далее. Он решил проверить
// все слова русского языка, но проверив слова "муравьед", "электрохлеборезка", "пятновыводитель", он очень устал и
// немного отчаялся.
//
//     Напишите программу, которая на вход получает слово (в качестве параметра командной строки) и в ответ выводит
// полный список слов, которые можно получить из букв этого слова. Используйте, для поиска вот такую базу слов
// https://raw.githubusercontent.com/danakt/russian-words/master/russian.txt
//
//
//     Каждое задание должно быть в отдельном файле.  Все файлы необходимо упаковать в zip архив.
//     Задания должны быть выполнены на языке PHP.
//     Срока подготовки тестового задания нет, но чем быстрее оно выполнено, тем больше шанс получить работу,
//     так как тестовые задания оцениваются по мере их поступления.
//
//     Убедительно просим не публиковать решения тестовых заданий на специальных ресурсах, посвященных выполнению
// тестовых заданий. Это приводит к увольнению людей, которые устроились к нам на работу нечестным образом.
//     Также напоминаем, что тестовые задания являются  интеллектуальной собственностью нашей компании их публикация
// без нашего разрешения является нарушением закона.



// Полиндром - создать функцию сравнивающую слова без учета регистра
// function polindrom (str) {
//     const newStr = str.toLowerCase();
//     const poli = newStr.split('').reverse().join('');
//     return  console.log(poli === newStr)
// }
// polindrom('Шабаш')
// function polindrom (str) {
//     return  console.log(str.toLowerCase() === str.toLowerCase().split('').reverse().join(''))
// }
// polindrom('Шабаш')
// const polindrom = (str) => console.log(str.toLowerCase() === str.toLowerCase().split('').reverse().join(''));
// polindrom('караК')
//Перевернуть одно или более слов наоборот
// const spinWorlds = (string) => {
//     const newStr = string.toUpperCase().split(' ').reverse().map(letter => letter.split('').reverse().join('')).join(' ')
//     console.log(newStr)
// }
// spinWorlds('Hello Taras Vasilievich Schevchenko')
const presidents = [
    {first: 'George', last: 'Washington', born: 1732, died: 1799},
    {first: 'John', last: 'Adams', born: 1735, died: 1826},
    {first: 'Ronald', last: 'Reagan', born: 1911, died: 2004},
    {first: 'Gerald', last: 'Ford', born: 1913, died: 2006},
    {first: 'Richard', last: 'Nixon', born: 1913, died: 1994},
    {first: 'John F.', last: 'Kennedy', born: 1917, died: 1963},
    {first: 'Harry S.', last: 'Truman', born: 1884, died: 1972},
    {first: 'Grover', last: 'Cleveland', born: 1837, died: 1908},
    {first: 'Chester A.', last: 'Arthur', born: 1829, died: 1886},
    {first: 'Abraham', last: 'Lincoln', born: 1809, died: 1865},
    {first: 'Franklin', last: 'Pierce', born: 1804, died: 1869},
    {first: 'Lyndon B.', last: 'Johnson', born: 1908, died: 1973},
    {first: 'Dwight D.', last: 'Eisenhower', born: 1890, died: 1969},
];


    const fill = presidents.sort((a,b) => (a.first > b.first) ? 1 : -1 );
    const juniorDead = presidents.sort((a,b) => (a.died < b.died) ? 1 : -1)
    const fullLifePresident = presidents.reduce((total, president) => total + (president.died-president.born), 0)
console.table(fullLifePresident)
const writers = ['Василий, Жуковский', 'Александр, Грибоедов', 'Александр, Пушкин', 'Владимир, Даль',
    'Николай, Языков', 'Федор, Тютчев', 'Николай, Гоголь', 'Алексей, Кольцов', 'Александр, Герцен',
    'Иван, Гончаров', 'Михаил, Лермонтов', 'Пётр, Ершов', 'Алексей, Толстой', 'Даниил, Заточник',
    'Александр, Радищев', 'Евгений, Баратынский', 'Петр, Вяземский', 'Александр, Бестужев-Марлинский',
    'Михаил, Загоскин', 'Сергей, Аксаков', 'Владимир, Одоевский', 'Григорий, Данилевский',
    'Алексей, Писемский', 'Дмитрий, Григорович', 'Яков, Полонский', 'Леонид, Андреев',
    'Валерий, Брюсов', 'Саша, Черный', 'Юрий, Трифонов', 'Федор, Абрамов',
    'Дмитрий, Кедрин', 'Василий, Шукшин'];

const data = ['truck', 'car', 'car', 'truck', 'bike', 'walk', 'car', 'van', 'bike',
    'walk', 'car', 'van', 'car', 'truck'];